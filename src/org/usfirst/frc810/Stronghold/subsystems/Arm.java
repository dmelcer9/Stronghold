// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc810.Stronghold.subsystems;

import org.usfirst.frc810.Stronghold.RobotMap;
import org.usfirst.frc810.Stronghold.commands.*;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.CANTalon;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.*;

/**
 *
 */
public class Arm extends Subsystem {
 
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
    public static final double ZeroValue = 0;
    public static final double VertValue = 5;
    public static final double MinAngle = -15;
    public static final double MaxAngle = 90;
    public static final double RampValue = 15;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Solenoid pusher = RobotMap.armPusher;
    private final CANTalon intake = RobotMap.armIntake;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    
    
    //NOTE: Negative speed = intake
    //Positive speed = shoot
    
    public void setShooterSpeed(double rpm){
    	intake.set(rpm);
    }

    public void stopShooter(){
    	setShooterSpeed(0);
    }
    
    
    public void pushBall(){
    	pusher.set(true);
    	Timer.delay(.25);
    	pusher.set(false);
    }
    
    public void retractPiston(){
    	pusher.set(false);
    }
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
}

